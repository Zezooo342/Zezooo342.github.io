/**
 * SEO Helper - Enhanced Meta Tags and Structured Data
 * Automatically injects missing canonical, description, and JSON-LD
 * Version: 1.0.0 - AdSense Ready
 */
(function(){
'use strict';

// Skip if AMP page
if (document.documentElement.hasAttribute('⚡') || document.documentElement.hasAttribute('amp')) {
    return;
}

// Default site metadata
const SITE_CONFIG = {
    name: 'دليل المال العربي',
    url: 'https://zezooo342.github.io',
    logo: 'https://zezooo342.github.io/assets/images/og-default.png',
    description: 'منصة عربية متخصصة في المحتوى المالي والاستثماري والعمل الحر'
};

/**
 * Get page canonical URL with duplicate handling
 */
function getCanonicalUrl() {
    let canonical = document.querySelector('link[rel="canonical"]');
    if (canonical) return canonical.href;
    
    // Generate canonical from current URL
    let url = window.location.href;
    
    // Handle common duplicate patterns
    const duplicateParams = document.querySelector('meta[name="duplicate-params"]');
    if (duplicateParams) {
        const params = duplicateParams.content.split(',');
        const urlObj = new URL(url);
        params.forEach(param => urlObj.searchParams.delete(param.trim()));
        url = urlObj.toString();
    }
    
    // Remove trailing slashes and fragments
    url = url.replace(/#.*$/, '').replace(/\/$/, '');
    
    return url;
}

/**
 * Inject canonical tag if missing
 */
function injectCanonical() {
    if (document.querySelector('link[rel="canonical"]')) return;
    
    const canonical = document.createElement('link');
    canonical.rel = 'canonical';
    canonical.href = getCanonicalUrl();
    document.head.appendChild(canonical);
}

/**
 * Inject meta description if missing
 */
function injectMetaDescription() {
    if (document.querySelector('meta[name="description"]')) return;
    
    let description = '';
    
    // Try to extract from first paragraph
    const firstP = document.querySelector('main p, .main p, article p, .container p, body p');
    if (firstP) {
        description = firstP.textContent.trim().substring(0, 155);
        if (description.length === 155) description += '...';
    }
    
    // Fallback to site description
    if (!description || description.length < 50) {
        description = SITE_CONFIG.description;
    }
    
    const meta = document.createElement('meta');
    meta.name = 'description';
    meta.content = description;
    document.head.appendChild(meta);
}

/**
 * Inject Open Graph image if missing
 */
function injectOGImage() {
    if (document.querySelector('meta[property="og:image"]')) return;
    
    const ogImage = document.createElement('meta');
    ogImage.setAttribute('property', 'og:image');
    ogImage.content = SITE_CONFIG.logo;
    document.head.appendChild(ogImage);
}

/**
 * Determine page type and generate appropriate JSON-LD
 */
function generateJsonLD() {
    // Don't add if already exists
    if (document.querySelector('script[type="application/ld+json"]')) return;
    
    const isArticle = document.querySelector('article, [data-ld-article], h1') !== null &&
                     (window.location.pathname.includes('article') || 
                      document.querySelector('h1, h2') !== null);
    
    let jsonLD = {
        "@context": "https://schema.org",
        "@type": isArticle ? "Article" : "WebPage",
        "url": getCanonicalUrl(),
        "name": document.title,
        "description": document.querySelector('meta[name="description"]')?.content || SITE_CONFIG.description,
        "publisher": {
            "@type": "Organization",
            "name": SITE_CONFIG.name,
            "url": SITE_CONFIG.url,
            "logo": SITE_CONFIG.logo
        }
    };
    
    if (isArticle) {
        const h1 = document.querySelector('h1');
        jsonLD.headline = h1 ? h1.textContent.trim() : document.title;
        jsonLD.author = {
            "@type": "Organization",
            "name": SITE_CONFIG.name
        };
        jsonLD.datePublished = new Date().toISOString().split('T')[0];
        jsonLD.dateModified = jsonLD.datePublished;
        jsonLD.inLanguage = "ar";
        jsonLD.mainEntityOfPage = getCanonicalUrl();
        jsonLD.image = SITE_CONFIG.logo;
    }
    
    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.textContent = JSON.stringify(jsonLD, null, 2);
    document.head.appendChild(script);
}

/**
 * Apply lazy loading to images and iframes
 */
function applyLazyLoading() {
    // Images
    document.querySelectorAll('img:not([loading])').forEach(img => {
        img.loading = 'lazy';
        img.decoding = 'async';
    });
    
    // Iframes
    document.querySelectorAll('iframe:not([loading])').forEach(iframe => {
        iframe.loading = 'lazy';
    });
}

/**
 * Add author and date info to articles if missing
 */
function enhanceArticleInfo() {
    const isArticle = document.querySelector('article, [data-ld-article], h1') !== null;
    if (!isArticle) return;
    
    const mainContent = document.querySelector('main, .main, article, .container') || document.body;
    
    // Check if author/date info already exists
    if (mainContent.querySelector('.article-meta, .author-info, .publish-date')) return;
    
    const articleMeta = document.createElement('div');
    articleMeta.className = 'article-meta';
    articleMeta.style.cssText = 'margin: 1em 0; padding: 1em; background: #f8f9fa; border-radius: 8px; font-size: 0.9em; color: #666;';
    articleMeta.innerHTML = `
        <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap;">
            <div><strong>المؤلف:</strong> فريق ${SITE_CONFIG.name}</div>
            <div><strong>تاريخ النشر:</strong> ${new Date().toLocaleDateString('ar-SA')}</div>
        </div>
    `;
    
    const h1 = mainContent.querySelector('h1');
    if (h1) {
        h1.insertAdjacentElement('afterend', articleMeta);
    } else {
        mainContent.insertBefore(articleMeta, mainContent.firstChild);
    }
}

/**
 * Initialize all SEO enhancements
 */
function init() {
    try {
        injectCanonical();
        injectMetaDescription();
        injectOGImage();
        generateJsonLD();
        applyLazyLoading();
        enhanceArticleInfo();
    } catch (error) {
        console.warn('SEO Helper error:', error);
    }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
} else {
    init();
}

// Expose for manual use
window.SEOHelper = {
    init: init,
    injectCanonical: injectCanonical,
    injectMetaDescription: injectMetaDescription,
    generateJsonLD: generateJsonLD
};

})();