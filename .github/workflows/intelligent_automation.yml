name: Smart Content Automation
permissions: read-all

on:
  schedule:
    - cron: '0 */6 * * *'  # كل 6 ساعات
  workflow_dispatch:       # تشغيل يدوي

jobs:
  intelligent_automation:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      
      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run AI Growth System
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        run: |
          echo "🧠 Running AI Growth System..."
          # Ensure all required images exist before processing
          if [ ! -f "assets/images/banner-finance-real.jpg" ]; then
            echo "⚠️ banner-finance-real.jpg not found, copying from banner-finance.jpg"
            cp assets/images/banner-finance.jpg assets/images/banner-finance-real.jpg 2>/dev/null || echo "Warning: Could not create banner-finance-real.jpg"
          fi
          if [ ! -f "assets/images/team-real.jpg" ]; then
            echo "⚠️ team-real.jpg not found, copying from team-arabic.jpg"
            cp assets/images/team-arabic.jpg assets/images/team-real.jpg 2>/dev/null || echo "Warning: Could not create team-real.jpg"
          fi
          if [ ! -f "assets/images/og-real.jpg" ]; then
            echo "⚠️ og-real.jpg not found, copying from og-default.png"
            cp assets/images/og-default.png assets/images/og-real.jpg 2>/dev/null || echo "Warning: Could not create og-real.jpg"
          fi
          python ai_growth_system.py
          echo "✅ AI Analysis Complete"
      
      - name: Run Automation Master
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        run: |
          echo "🤖 Running Automation Master..."
          # Ensure all required images exist before processing
          if [ ! -f "assets/images/banner-finance-real.jpg" ]; then
            echo "⚠️ banner-finance-real.jpg not found, copying from banner-finance.jpg"
            cp assets/images/banner-finance.jpg assets/images/banner-finance-real.jpg 2>/dev/null || echo "Warning: Could not create banner-finance-real.jpg"
          fi
          if [ ! -f "assets/images/team-real.jpg" ]; then
            echo "⚠️ team-real.jpg not found, copying from team-arabic.jpg"
            cp assets/images/team-arabic.jpg assets/images/team-real.jpg 2>/dev/null || echo "Warning: Could not create team-real.jpg"
          fi
          if [ ! -f "assets/images/og-real.jpg" ]; then
            echo "⚠️ og-real.jpg not found, copying from og-default.png"
            cp assets/images/og-default.png assets/images/og-real.jpg 2>/dev/null || echo "Warning: Could not create og-real.jpg"
          fi
          python automation_master.py
          echo "✅ Automation Complete"
      
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          git add -A
          # Check if there are staged changes before committing
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Ensure we have a valid branch and can push
            if git rev-parse --verify HEAD >/dev/null 2>&1; then
              git commit -m "🤖 Auto-update: Content & Analysis $(date)"
              # Check if remote branch exists before pushing
              if git ls-remote --heads origin $(git rev-parse --abbrev-ref HEAD) | grep -q $(git rev-parse --abbrev-ref HEAD); then
                git push
              else
                git push -u origin $(git rev-parse --abbrev-ref HEAD)
              fi
              echo "✅ Changes pushed successfully"
            else
              echo "⚠️ Invalid git state, skipping commit"
            fi
          fi
      
      - name: Cleanup Old Images (After Processing)
        run: |
          echo "🧹 Cleaning up old image files..."
          # Only remove old images after all processing is complete
          # This prevents "Could not process image" errors
          if [ -f "assets/images/banner-finance-real.jpg" ] && [ -f "assets/images/banner-finance.jpg" ]; then
            echo "✅ New banner image exists, old one can be safely removed if needed"
            # rm assets/images/banner-finance.jpg (commented out - keeping old images as backup)
          fi
          if [ -f "assets/images/team-real.jpg" ] && [ -f "assets/images/team-arabic.jpg" ]; then
            echo "✅ New team image exists, old one can be safely removed if needed"
            # rm assets/images/team-arabic.jpg (commented out - keeping old images as backup)
          fi
          if [ -f "assets/images/og-real.jpg" ] && [ -f "assets/images/og-default.png" ]; then
            echo "✅ New og image exists, old one can be safely removed if needed"
            # rm assets/images/og-default.png (commented out - keeping old images as backup)
          fi
          echo "✅ Cleanup complete"

  performance_monitoring:
    permissions: {}
    runs-on: ubuntu-latest
    needs: intelligent_automation
    
    steps:
      - name: Monitor Website Performance
        run: |
          echo "📊 Monitoring website performance..."
          # يمكن إضافة فحوصات الأداء هنا
          echo "✅ Performance check complete"
