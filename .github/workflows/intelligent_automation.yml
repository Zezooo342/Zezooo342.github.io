name: Smart Content Automation
permissions: read-all

on:
  schedule:
    - cron: '0 */6 * * *'  # كل 6 ساعات
  workflow_dispatch:       # تشغيل يدوي

jobs:
  intelligent_automation:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check main branch existence
        run: |
          if git rev-parse --verify main >/dev/null 2>&1; then
            echo "✅ Main branch exists"
          else
            echo "⚠️ Main branch not found, using current branch"
          fi
      
      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Check image validity
        run: |
          echo "🔍 Checking image validity in assets/images..."
          failed=0
          for img in assets/images/*.jpg assets/images/*.png assets/images/*.jpeg; do
            if [ -f "$img" ]; then
              # First check with 'file' command
              file_output=$(file "$img")
              echo "Checking $img: $file_output"
              
              # Check if it's a valid image file
              if echo "$file_output" | grep -q -E "(JPEG|PNG|image)"; then
                # Check file size (should be > 100 bytes for real images)
                size=$(stat -c%s "$img")
                if [ "$size" -gt 100 ]; then
                  # Try ImageMagick if available
                  if command -v identify >/dev/null 2>&1; then
                    if identify "$img" >/dev/null 2>&1; then
                      echo "✅ Valid image: $img (${size} bytes)"
                    else
                      echo "❌ Invalid image (ImageMagick failed): $img"
                      failed=1
                    fi
                  else
                    echo "✅ Valid image (file check passed): $img (${size} bytes)"
                  fi
                else
                  echo "⚠️ Very small image file: $img (${size} bytes) - may be placeholder"
                fi
              else
                echo "❌ Invalid image file type: $img"
                failed=1
              fi
            fi
          done
          if [ "$failed" -eq 1 ]; then
            echo "❌ Image validation failed"
            exit 1
          fi
          echo "✅ All images are valid"
      
      - name: Setup Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      
      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run AI Growth System
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        run: |
          echo "🧠 Running AI Growth System..."
          python ai_growth_system.py
          echo "✅ AI Analysis Complete"
      
      - name: Run Automation Master
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        run: |
          echo "🤖 Running Automation Master..."
          python automation_master.py
          echo "✅ Automation Complete"
      
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Check if main branch exists before any git diff operations
            if git rev-parse --verify main >/dev/null 2>&1; then
              echo "📝 Committing changes to main branch"
            else
              echo "📝 Committing changes to current branch"
            fi
            git commit -m "🤖 Auto-update: Content & Analysis $(date)"
            git push
            echo "✅ Changes pushed successfully"
          fi

  performance_monitoring:
    permissions: {}
    runs-on: ubuntu-latest
    needs: intelligent_automation
    
    steps:
      - name: Monitor Website Performance
        run: |
          echo "📊 Monitoring website performance..."
          # يمكن إضافة فحوصات الأداء هنا
          echo "✅ Performance check complete"
